// <auto-generated />
using System;
using HospiEnCasa.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalEnCasa.App.Persistencia.Migrations
{
    [DbContext(typeof(AppicationContext))]
    partial class AppicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Historico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entorno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idPaciente")
                        .IsUnique();

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Hogar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("cidudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int");

                    b.Property<double>("latirud")
                        .HasColumnType("float");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("idPaciente")
                        .IsUnique();

                    b.ToTable("Hogar");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Hospital", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("idGenero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroTelefonico")
                        .HasColumnType("int");

                    b.Property<int?>("suGeneroId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("suGeneroId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.SignoVital", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("elPacienteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaYhora")
                        .HasColumnType("datetime2");

                    b.Property<string>("signo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("elPacienteid");

                    b.ToTable("SignoVitales");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.SugerenciaDeCuidado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Historicoid")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechayHora")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Historicoid");

                    b.ToTable("sugerenciaCuidados");
                });

            modelBuilder.Entity("MedicoPaciente", b =>
                {
                    b.Property<int>("pacientesid")
                        .HasColumnType("int");

                    b.Property<int>("susMedicosid")
                        .HasColumnType("int");

                    b.HasKey("pacientesid", "susMedicosid");

                    b.HasIndex("susMedicosid");

                    b.ToTable("MedicoPaciente");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Auxiliar", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.Persona");

                    b.Property<int?>("suHospitalid")
                        .HasColumnType("int");

                    b.Property<string>("sucursal")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("suHospitalid");

                    b.ToTable("Auxiliares");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.FamiliarDesignado", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.Persona");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idFamiliar")
                        .HasColumnType("int");

                    b.Property<string>("parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("idFamiliar")
                        .IsUnique()
                        .HasFilter("[idFamiliar] IS NOT NULL");

                    b.ToTable("FamiliaresDesignados");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Paciente", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.Persona");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("suEnfermeroid")
                        .HasColumnType("int");

                    b.Property<string>("tipoDeDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("suEnfermeroid");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.Persona");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("suHospitalid")
                        .HasColumnType("int");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("suHospitalid");

                    b.ToTable("PersonaldeSalud");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Enfermero", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud");

                    b.Property<int>("horasLaborales")
                        .HasColumnType("int");

                    b.Property<string>("tarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Enfermeras");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Medico", b =>
                {
                    b.HasBaseType("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Historico", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Paciente", "elPaciente")
                        .WithOne("historialMedico")
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Historico", "idPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("elPaciente");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Hogar", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Paciente", "elPaciente")
                        .WithOne("suHogar")
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Hogar", "idPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("elPaciente");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Persona", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Genero", "suGenero")
                        .WithMany("laPersona")
                        .HasForeignKey("suGeneroId");

                    b.Navigation("suGenero");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.SignoVital", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Paciente", "elPaciente")
                        .WithMany("signsVitales")
                        .HasForeignKey("elPacienteid");

                    b.Navigation("elPaciente");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.SugerenciaDeCuidado", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Historico", null)
                        .WithMany("sugerenciasDeCuidados")
                        .HasForeignKey("Historicoid");
                });

            modelBuilder.Entity("MedicoPaciente", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Paciente", null)
                        .WithMany()
                        .HasForeignKey("pacientesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Medico", null)
                        .WithMany()
                        .HasForeignKey("susMedicosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Auxiliar", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Persona", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Auxiliar", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Hospital", "suHospital")
                        .WithMany("Auxiliares")
                        .HasForeignKey("suHospitalid");

                    b.Navigation("suHospital");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.FamiliarDesignado", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Persona", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.FamiliarDesignado", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Paciente", "suFamiliar")
                        .WithOne("suFamiliarDesinado")
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.FamiliarDesignado", "idFamiliar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("suFamiliar");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Paciente", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Persona", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Paciente", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Enfermero", "suEnfermero")
                        .WithMany("pacientes")
                        .HasForeignKey("suEnfermeroid");

                    b.Navigation("suEnfermero");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Persona", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.Hospital", "suHospital")
                        .WithMany("listaPersonalDeSalud")
                        .HasForeignKey("suHospitalid");

                    b.Navigation("suHospital");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Enfermero", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Enfermero", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Medico", b =>
                {
                    b.HasOne("HospitalEnCasa.App.Dominio.entidades.PersonalDeSalud", null)
                        .WithOne()
                        .HasForeignKey("HospitalEnCasa.App.Dominio.entidades.Medico", "id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Genero", b =>
                {
                    b.Navigation("laPersona");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Historico", b =>
                {
                    b.Navigation("sugerenciasDeCuidados");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Hospital", b =>
                {
                    b.Navigation("Auxiliares");

                    b.Navigation("listaPersonalDeSalud");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Paciente", b =>
                {
                    b.Navigation("historialMedico");

                    b.Navigation("signsVitales");

                    b.Navigation("suFamiliarDesinado");

                    b.Navigation("suHogar");
                });

            modelBuilder.Entity("HospitalEnCasa.App.Dominio.entidades.Enfermero", b =>
                {
                    b.Navigation("pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
